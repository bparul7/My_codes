//Given a string of no dialled, return all possible strings that can be generated by taking exactly one character for 
//each digit
#include <bits/stdc++.h>
using namespace std;
 
using ll = long long;
using db = double;
using pii = pair < int, int >;
using pll = pair < ll, ll >;
const int N = 2e5 + 10;
const ll inf = 1e15 + 42;
#define endl "\n"
const ll mod = 1000000007;
map <int, string> m;
int dial;
vector <string> ans;

void go (int no, string val) {
	if (no==0) {
		reverse (val.begin(), val.end());
		ans.push_back (val);
		return;
	}
	string v = m[no%10];
	no = no/10;
	for (int i=0; i<v.size(); i++) {
		go (no, val+v[i]);
	}
}

void testCase() {
	m[2] = "abc";
	m[3] = "def";
	m[4] = "ghi";
	m[5] = "jkl";
	m[6] = "mno";
	m[7] = "pqrs";
	m[8] = "tuv";
	m[9] = "wxyz";
	m[1] = "";
	m[0] = "";
	cin >> dial;
	//Using Recursion
	go (dial, "");
	for (int i=0; i<ans.size(); i++) {
		cout << ans[i] << endl;
	}
	//Using Loop
	//Use k loops
}
 
int main() {
    ios_base :: sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    testCase();
    return 0;
}